16 bit virtual machine

8 general purpose registers

4 byte 'instructions'


Memory Segmentation:

65336 bytes indexes 0 - 65335

0x0000 - 0x3FFF ; Program code
0x4000 - 0x5FFF ; Data/global variables
0x6000 - 0xCFFF ; Heap (starts at 0x6000)
0xD000 - 0xFEFF ; Stack (starts at 0xFEFF)
0xFF00 - 0xFFFF ; I/O / special addresses


all ints are signed, using twos compliment


Instruction set:





store will be the only instruction where a non-register can be
the first operand. it will be a memory address



Instruction Layout:

byte 1:

4 bit opcode category
4 bit sub-opcode
this provides us with 16 opcode categories, and 16 specific operations/layouts


byte 2:
3 bit first operand (which register for most ops, store indicates which type of memory address)
3 bit second operand type (register, immediate value, memory address, etc)
2 bit flags (cpu flags, extra instruction, etc)

byte 3+4:
contains the 2nd operand
